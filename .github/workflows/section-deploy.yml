name: Cherry-pick Commits

on:
  workflow_call:
    inputs:
      to_branch:
        required: true
        type: string
      cherry_pick_commits:
        required: true
        type: string

    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true

jobs:
  batch_cherry_pick:
    if: ${{ inputs.from_branch == 'feature/a-schedule-staging' && inputs.to_branch == 'feature/a-schedule-production' }}
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.to_branch }}
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: üõ† Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: üîÄ Cherry-pick all commits
        run: |
          IFS=',' read -ra COMMITS <<< "${{ inputs.cherry_pick_commits }}"
          for COMMIT in "${COMMITS[@]}"; do
            echo "‚û°Ô∏è Cherry-picking $COMMIT"
            git cherry-pick "$COMMIT" || {
              echo "‚ö†Ô∏è Conflict. Using theirs version."
              git status --porcelain | grep '^UU ' | cut -c 4- | while read file; do
                git checkout --theirs -- "$file"
                git add "$file"
              done
              git cherry-pick --continue
            }
          done

      - name: üöÄ Push to branch
        env:
          TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:${{ inputs.to_branch }}